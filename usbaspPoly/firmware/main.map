Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o (exit)
/usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
                              usbdrv/usbdrv.o (__do_copy_data)
/usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
                              usbdrv/usbdrv.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

usbTxBuf            0xb               usbdrv/usbdrv.o
usbDeviceAddr       0x1               usbdrv/usbdrv.o
usbRxToken          0x1               usbdrv/usbdrv.o
usbInputBufOffset   0x1               usbdrv/usbdrv.o
sck_spsr            0x1               isp.o
ispTransmit         0x2               isp.o
sck_spcr            0x1               isp.o
usbMsgPtr           0x2               usbdrv/usbdrv.o
usbRxLen            0x1               usbdrv/usbdrv.o
usbNewDeviceAddr    0x1               usbdrv/usbdrv.o
usbCurrentTok       0x1               usbdrv/usbdrv.o
usbConfiguration    0x1               usbdrv/usbdrv.o
usbRxBuf            0x16              usbdrv/usbdrv.o
sck_sw_delay        0x1               isp.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
LOAD usbdrv/usbdrv.o
LOAD usbdrv/usbdrvasm.o
LOAD usbdrv/oddebug.o
LOAD fifo.o
LOAD usart.o
LOAD isp.o
LOAD clock.o
LOAD main.o
START GROUP
LOAD /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/libm.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x1282
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table
                0x0000000000000026       0x1a main.o
                0x0000000000000040                . = ALIGN (0x2)
                0x0000000000000040                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000040        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000040                __trampolines_end = .
 *(.progmem*)
 .progmem.data  0x0000000000000040       0x52 usbdrv/usbdrv.o
                0x0000000000000040                usbDescriptorConfiguration
                0x0000000000000052                usbDescriptorDevice
                0x0000000000000064                usbDescriptorStringDevice
                0x0000000000000072                usbDescriptorStringVendor
                0x000000000000008e                usbDescriptorString0
                0x0000000000000092                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000092                __ctors_start = .
 *(.ctors)
                0x0000000000000092                __ctors_end = .
                0x0000000000000092                __dtors_start = .
 *(.dtors)
                0x0000000000000092                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000092        0x0 /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
                0x0000000000000092                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000092        0xc /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000000009e       0x16 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
                0x000000000000009e                __do_copy_data
 .init4         0x00000000000000b4       0x10 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
                0x00000000000000b4                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000c4        0x4 /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x00000000000000c8        0x2 /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
                0x00000000000000c8                __vector_12
                0x00000000000000c8                __bad_interrupt
                0x00000000000000c8                __vector_6
                0x00000000000000c8                __vector_3
                0x00000000000000c8                __vector_11
                0x00000000000000c8                __vector_13
                0x00000000000000c8                __vector_17
                0x00000000000000c8                __vector_7
                0x00000000000000c8                __vector_5
                0x00000000000000c8                __vector_4
                0x00000000000000c8                __vector_9
                0x00000000000000c8                __vector_2
                0x00000000000000c8                __vector_15
                0x00000000000000c8                __vector_8
                0x00000000000000c8                __vector_14
                0x00000000000000c8                __vector_10
                0x00000000000000c8                __vector_16
                0x00000000000000c8                __vector_18
 .text          0x00000000000000ca      0x25c usbdrv/usbdrv.o
                0x00000000000000ca                usbPoll
                0x0000000000000318                usbInit
 .text          0x0000000000000326      0x28c usbdrv/usbdrvasm.o
                0x0000000000000326                usbCrc16
                0x0000000000000350                usbCrc16Append
                0x0000000000000358                __vector_1
 .text          0x00000000000005b2        0x0 usbdrv/oddebug.o
 .text          0x00000000000005b2       0xec fifo.o
                0x00000000000005b2                fifo_init
                0x00000000000005ca                fifo_enqueue
                0x0000000000000620                fifo_dequeue
                0x0000000000000662                fifo_empty
                0x0000000000000678                fifo_full
 .text          0x000000000000069e       0xe2 usart.o
                0x000000000000069e                usart_setbaud
                0x00000000000006c0                usart_setbits
                0x00000000000006ee                usart_setparity
                0x0000000000000716                usart_init
                0x0000000000000748                usart_stop
                0x000000000000074c                usart_tx
                0x0000000000000764                usart_rx
 .text          0x0000000000000780      0x472 isp.o
                0x0000000000000780                ispTransmit_sw
                0x00000000000007be                ispTransmit_hw
                0x00000000000007c8                spiHWenable
                0x00000000000007d6                ispSetSCKOption
                0x000000000000088c                ispDelay
                0x000000000000089c                ispConnect
                0x00000000000008e4                ispDisconnect
                0x00000000000008f4                ispEnterProgrammingMode
                0x0000000000000982                ispReadFlash
                0x00000000000009ea                ispWriteFlash
                0x0000000000000aa4                ispFlushPage
                0x0000000000000b50                ispReadEEPROM
                0x0000000000000b9a                ispWriteEEPROM
 .text          0x0000000000000bf2       0x18 clock.o
                0x0000000000000bf2                clockWait
 .text          0x0000000000000c0a      0x636 main.o
                0x0000000000000c0a                usbFunctionSetup
                0x0000000000000f2e                usbFunctionRead
                0x00000000000010c2                usbFunctionWrite
 .text          0x0000000000001240        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text          0x0000000000001240        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text          0x0000000000001240        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
                0x0000000000001240                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000001240       0x3e main.o
                0x0000000000001240                main
 .text.libgcc.mul
                0x000000000000127e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x000000000000127e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x000000000000127e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x000000000000127e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x000000000000127e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x000000000000127e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x000000000000127e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x000000000000127e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x000000000000127e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x000000000000127e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x000000000000127e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x000000000000127e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x000000000000127e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x000000000000127e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x000000000000127e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x000000000000127e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x000000000000127e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x000000000000127e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x000000000000127e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x000000000000127e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x000000000000127e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
                0x000000000000127e                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000000000000127e        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
                0x000000000000127e                exit
                0x000000000000127e                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000000000000127e        0x4 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000001282                _etext = .

.data           0x0000000000800060       0x16 load address 0x0000000000001282
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
 .data          0x0000000000800060        0x2 usbdrv/usbdrv.o
                0x0000000000800061                usbTxLen
 .data          0x0000000000800062        0x0 usbdrv/usbdrvasm.o
 .data          0x0000000000800062        0x0 usbdrv/oddebug.o
 .data          0x0000000000800062        0x0 fifo.o
 .data          0x0000000000800062        0x0 usart.o
 .data          0x0000000000800062        0x0 isp.o
 .data          0x0000000000800062        0x0 clock.o
 .data          0x0000000000800062        0x0 main.o
 .data          0x0000000000800062        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .data          0x0000000000800062        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .data          0x0000000000800062        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 .rodata        0x0000000000800062       0x14 usart.o
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800076                . = ALIGN (0x2)
                0x0000000000800076                _edata = .
                0x0000000000800076                PROVIDE (__data_end, .)

.bss            0x0000000000800076      0x155
                0x0000000000800076                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800076        0x0 /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
 .bss           0x0000000000800076        0x1 usbdrv/usbdrv.o
 .bss           0x0000000000800077        0x0 usbdrv/usbdrvasm.o
 .bss           0x0000000000800077        0x0 usbdrv/oddebug.o
 .bss           0x0000000000800077        0x0 fifo.o
 .bss           0x0000000000800077        0x0 usart.o
 .bss           0x0000000000800077        0x0 isp.o
 .bss           0x0000000000800077        0x0 clock.o
 .bss           0x0000000000800077      0x125 main.o
 .bss           0x000000000080019c        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .bss           0x000000000080019c        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
 .bss           0x000000000080019c        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x000000000080019c       0x2a usbdrv/usbdrv.o
                0x000000000080019c                usbTxBuf
                0x00000000008001a7                usbDeviceAddr
                0x00000000008001a8                usbRxToken
                0x00000000008001a9                usbInputBufOffset
                0x00000000008001aa                usbMsgPtr
                0x00000000008001ac                usbRxLen
                0x00000000008001ad                usbNewDeviceAddr
                0x00000000008001ae                usbCurrentTok
                0x00000000008001af                usbConfiguration
                0x00000000008001b0                usbRxBuf
 COMMON         0x00000000008001c6        0x5 isp.o
                0x00000000008001c6                sck_spsr
                0x00000000008001c7                ispTransmit
                0x00000000008001c9                sck_spcr
                0x00000000008001ca                sck_sw_delay
                0x00000000008001cb                PROVIDE (__bss_end, .)
                0x0000000000001282                __data_load_start = LOADADDR (.data)
                0x0000000000001298                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008001cb        0x0
                0x00000000008001cb                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00000000008001cb                PROVIDE (__noinit_end, .)
                0x00000000008001cb                _end = .
                0x00000000008001cb                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000      0x8c4
 *(.stab)
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o
 .stab          0x00000000000006cc       0x6c /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
                                         0x78 (size before relaxing)
 .stab          0x0000000000000738       0xd8 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_copy_data.o)
                                         0xe4 (size before relaxing)
 .stab          0x0000000000000810       0xb4 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_clear_bss.o)
                                         0xc0 (size before relaxing)

.stabstr        0x0000000000000000       0xe5
 *(.stabstr)
 .stabstr       0x0000000000000000       0xe5 /usr/lib/gcc/avr/4.9.2/../../../../avr/lib/avr4/crtm8.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x21
 *(.comment)
 .comment       0x0000000000000000       0x21 usbdrv/usbdrv.o
                                         0x22 (size before relaxing)
 .comment       0x0000000000000000       0x22 usbdrv/oddebug.o
 .comment       0x0000000000000000       0x22 fifo.o
 .comment       0x0000000000000000       0x22 usart.o
 .comment       0x0000000000000000       0x22 isp.o
 .comment       0x0000000000000000       0x22 clock.o
 .comment       0x0000000000000000       0x22 main.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(main.bin elf32-avr)
LOAD linker stubs
